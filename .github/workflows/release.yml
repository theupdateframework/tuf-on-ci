name: Release
concurrency: release

on:
  push:
    tags:
      - v*

permissions: {}

jobs:
  build-signer:
    name: Build tuf-on-ci signer
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false

      - uses: actions/setup-python@42375524e23c412d93fb67b49958b491fce71c38 # v5.4.0
        with:
          python-version: '3.13'

      - name: Install build dependencies
        run: python3 -m pip install -c build/build-constraints.txt build

      - name: Build release changelog, signer wheel & source tarball
        run: |
          PIP_CONSTRAINT=build/build-constraints.txt python3 -m build --sdist --wheel --outdir dist/ signer/
          awk "/## $GITHUB_REF_NAME/{flag=1; next} /## v/{flag=0} flag" docs/CHANGELOG.md > changelog

      - name: Store build artifacts
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: build-artifacts
          path: |
            dist
            changelog

  release-pypi:
    name: Release Signer on PyPI
    runs-on: ubuntu-latest
    needs: build-signer
    environment: release
    permissions:
      id-token: write # to authenticate as Trusted Publisher to pypi.org
    steps:
      - name: Fetch build artifacts
        uses: actions/download-artifact@95815c38cf2ff2164869cbab79da8d1f422bc89e # v4.2.1
        with:
          name: build-artifacts

      - name: Publish binary wheel and source tarball on PyPI
        if: github.repository == 'theupdateframework/tuf-on-ci'
        uses: pypa/gh-action-pypi-publish@76f52bc884231f62b9a034ebfe128415bbaabdfc # v1.12.4

  release-gh:
    name: Release
    runs-on: ubuntu-latest
    needs: release-pypi
    permissions:
      contents: write # to modify GitHub releases
    steps:
      - name: Fetch build artifacts
        uses: actions/download-artifact@95815c38cf2ff2164869cbab79da8d1f422bc89e # v4.2.1
        with:
          name: build-artifacts

      - name: Make a GitHub release
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          script: |
            fs = require('fs')
            res = await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: process.env.GITHUB_REF_NAME,
              tag_name: process.env.GITHUB_REF,
              body: fs.readFileSync('changelog', 'utf8'),
            })
            fs.readdirSync('dist/').forEach(file => {
              github.rest.repos.uploadReleaseAsset({
                owner: context.repo.owner,
                repo: context.repo.repo,
                release_id: res.data.id,
                name: file,
                data: fs.readFileSync('dist/' + file),
              });
            });
