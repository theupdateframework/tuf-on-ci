name: 'Create signing events'
description: 'Create signing events for offline signed metadata that is about to expire'

inputs:
  token:
    description: 'GitHub token'
    required: true

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633 # v4.1.2
      with:
        token: ${{ inputs.token }}
        fetch-depth: 0

    - uses: actions/setup-python@82c7e631bb3cdc910f68e0081d67478d79c6982d # v5.1.0
      with:
        python-version: "3.11"

    - run: pip --quiet install $GITHUB_ACTION_PATH/../../repo/
      shell: bash

    - name: Create signing event branches for expiring roles
      id: create-signing-events
      run: |
        events=$(tuf-on-ci-create-signing-events --push)
        echo events="$events"
        echo events="$events" >> $GITHUB_OUTPUT
        if [ -z "${events}" ]; then
            echo "Nothing to prepare" >> $GITHUB_STEP_SUMMARY
        else
            echo "Dispatching events for ${events}" >> $GITHUB_STEP_SUMMARY
        fi
      shell: bash

    - name: Dispatch signing event workflow
      # dispatch if using default token: otherwise create-signing-events step has already triggered push events
      if: inputs.token == github.token && steps.create-signing-events.outputs.events != ''
      env:
        EVENTS: ${{ steps.create-signing-events.outputs.events }}
      uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
      with:
        github-token: ${{ inputs.token }}
        script: |
          console.log('Dispatching events: ', process.env.EVENTS)
          process.env.EVENTS.trim().split(' ').forEach(event => {
            github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'signing-event.yml',
              ref: event,
            })
          })
