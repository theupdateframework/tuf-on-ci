name: "Online sign"
description: "Creates a snapshot and timestamp if needed, moves publish branch if needed"

inputs:
  token:
    description: 'GitHub token'
    required: true
  gcp_workload_identity_provider:
    description: "Google Cloud workload identity provider"
    required: false
    default: ""
  gcp_service_account:
    description: "Google Cloud service account name"
    required: false
    default: ""
  aws_region:
    description: "AWS region"
    required: false
    default: ""
  aws_role_to_assume:
    description: "AWS role to assume"
    required: false
    default: ""
  azure_client_id:
    description: "Azure SPN client id (required to use Azure to sign target roles)"
    required: false
    default: ""
  azure_tenant_id:
    description: "Azure SPN tenant id (required to use Azure to sign target roles)"
    required: false
    default: ""
  azure_subscription_id:
    description: "Azure SPN subscription id (required to use Azure to sign target roles)"
    required: false
    default: ""

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      with:
        token: ${{ inputs.token }}
        fetch-depth: 0

    - name: Authenticate to Google Cloud
      if: inputs.gcp_workload_identity_provider != ''
      uses: google-github-actions/auth@62cf5bd3e4211a0a0b51f2c6d6a37129d828611d # v2.1.5
      with:
        token_format: access_token
        workload_identity_provider: ${{ inputs.gcp_workload_identity_provider }}
        service_account: ${{ inputs.gcp_service_account }}

    - name: Authenticate to AWS
      if: inputs.aws_role_to_assume != ''
      uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 #v4.0.2
      with:
        aws-region: ${{ inputs.aws_region }}
        role-to-assume: ${{ inputs.aws_role_to_assume }}

    - name: Authenticate to Azure cloud
      if: inputs.azure_client_id != ''
      uses: azure/login@a65d910e8af852a8061c627c456678983e180302 # v2.2.0
      with:
        client-id: ${{ inputs.azure_client_id }}
        tenant-id: ${{ inputs.azure_tenant_id }}
        subscription-id: ${{ inputs.azure_subscription_id }}

    - uses: actions/setup-python@f677139bbe7f9c59b41e40162b753c062f5d49a3 # v5.2.0
      with:
        python-version: "3.11"

    - run: |
        echo "::group::Install tuf-on-ci"
        ROOT=$GITHUB_ACTION_PATH/../..
        pip install -c $ROOT/action-constraints.txt $ROOT/repo/
        echo "::endgroup::"
      shell: bash

    - id: online-sign
      run: |
        tuf-on-ci-online-sign --push

        # did we actually create a snapshot/timestamp commit?
        if [[ $GITHUB_SHA == $(git rev-parse HEAD) ]]; then
          echo "ONLINE_SIGNED=false"
          echo "ONLINE_SIGNED=false" >> "$GITHUB_ENV"
          echo "### Nothing to sign" >> "$GITHUB_STEP_SUMMARY"
        else
          echo "ONLINE_SIGNED=true"
          echo "ONLINE_SIGNED=true" >> "$GITHUB_ENV"
        fi
      shell: bash

    - id: move-publish-branch
      if: github.event_name != 'schedule' || env.ONLINE_SIGNED == 'true'
      run: |
        git show --oneline --no-patch HEAD
        git push origin HEAD:publish
        echo "rev=`git rev-parse HEAD`" >> $GITHUB_OUTPUT
        echo "### Online signing finished, will now publish" >> $GITHUB_STEP_SUMMARY
      shell: bash

    - id: dispatch-publish-workflow
      if: github.event_name != 'schedule' || env.ONLINE_SIGNED == 'true'
      uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
      with:
        github-token: ${{ inputs.token }}
        script: |
          console.log('Dispatching publish workflow')
          github.rest.actions.createWorkflowDispatch({
            owner: context.repo.owner,
            repo: context.repo.repo,
            workflow_id: 'publish.yml',
            ref: 'publish',
            inputs: {
              ref: '${{ steps.move-publish-branch.outputs.rev }}',
            },
          })
